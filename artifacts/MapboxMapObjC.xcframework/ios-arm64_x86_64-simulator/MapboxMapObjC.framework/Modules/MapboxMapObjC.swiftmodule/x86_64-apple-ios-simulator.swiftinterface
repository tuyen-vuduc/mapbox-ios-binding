// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-ios15.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MapboxMapObjC
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import MapboxMapObjC
import MapboxMaps
import Swift
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc open class MapInitOptionsFactory : ObjectiveC.NSObject {
  @objc public static func create(resourceOptions: MapboxCoreMaps.ResourceOptions? = nil, mapOptions: MapboxCoreMaps.MapOptions? = nil, cameraOptions: MapboxCoreMaps.CameraOptions? = nil, stylePath: Swift.String?) -> MapboxMaps.MapInitOptions
  @objc public static func create(resourceOptions: MapboxCoreMaps.ResourceOptions? = nil, mapOptions: MapboxCoreMaps.MapOptions? = nil, cameraOptions: MapboxCoreMaps.CameraOptions? = nil, styleURI: Foundation.URL?) -> MapboxMaps.MapInitOptions
  @objc deinit
}
extension MapboxMaps.MapInitOptions {
  @objc final public func options() -> Foundation.NSArray
}
extension MapboxMaps.ResourceOptions {
  public init(_ objcValue: MapboxCoreMaps.ResourceOptions)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc open class MapViewFactory : ObjectiveC.NSObject {
  @objc public static func create(frame: CoreFoundation.CGRect, options: MapboxMaps.MapInitOptions?) -> MapboxMaps.MapView
  @objc deinit
}
extension MapboxMaps.MapView {
  @objc @_Concurrency.MainActor(unsafe) dynamic public func setLocationDelegate(_ delegate: MapboxMaps.LocationPermissionsDelegate)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func requestTemporaryFullAccuracyPermissions(_ customKey: Swift.String)
  @objc @_Concurrency.MainActor(unsafe) dynamic public func puck2D()
}
